{"version":3,"sources":["webpack:///./components/radio/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/34.9da8c63c.js","sourcesContent":["export default \"# 单选框 Radio \\n\\n\\n## 基本用法\\n\\n```jsx\\nimport { Radio } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  onChange (e) {\\n    console.log(e.target.value)\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"za-row\\\">\\n        <Radio\\n          value=\\\"a\\\"\\n          style={{'marginRight':'15px'}}\\n          onChange={(e) => this.onChange(e)}\\n        >\\n          <span className=\\\"content\\\">未选中</span>\\n        </Radio>\\n\\n        <Radio\\n          value=\\\"a\\\"\\n          onChange={(e) => this.onChange(e)}\\n          style={{'marginRight':'15px'}}\\n        >\\n          <span className=\\\"content\\\">hover</span>\\n        </Radio>\\n\\n         <Radio\\n          checked\\n          style={{'marginRight':'15px'}}\\n          onChange={(e) => this.onChange(e)}\\n        >\\n          <span className=\\\"content\\\">已选中</span>\\n        </Radio>\\n\\n         <Radio\\n          value=\\\"a\\\"\\n          disabled= {true}\\n          style={{'marginRight':'15px'}}\\n          onChange={(e) => this.onChange(e)}\\n        >\\n          <span className=\\\"content\\\" >禁用</span>\\n        </Radio>\\n\\n         <Radio\\n          value=\\\"a\\\"\\n          checked={true}\\n          disabled={true}\\n          onChange={(e) => this.onChange(e)}\\n        >\\n          <span className=\\\"content\\\" >禁用</span>\\n        </Radio>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 无底色按钮样式/有底色按钮样式\\n```jsx\\n\\nimport { Radio } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      radioValue: ''\\n    }\\n  }\\n  \\n  onChange = (e) => {\\n    console.log(e.target.value)\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"r-con\\\">\\n        <Radio.Group ghost shape='rect' type=\\\"button\\\" onChange={(e) => this.onChange(e)} style={{'marginBottom':'15px'}}>\\n          <Radio value=\\\"选项一\\\">选项一</Radio>\\n          <Radio value=\\\"选项二\\\">选项二</Radio>\\n          <Radio value=\\\"选项三\\\">选项三</Radio>\\n        </Radio.Group>\\n        <Radio.Group ghost  className=\\\"ghost-demo\\\" style={{'marginBottom':'15px'}}>\\n          <Radio value=\\\"选项一\\\">选项一</Radio>\\n          <Radio disabled value=\\\"选项二\\\">选项二</Radio>\\n          <Radio value=\\\"选项三\\\">选项三</Radio>\\n        </Radio.Group>\\n        <Radio.Group disabled value=\\\"选项一\\\" style={{'marginBottom':'15px'}}>\\n          <Radio value=\\\"选项一\\\">选项一</Radio>\\n          <Radio value=\\\"选项二\\\">选项二</Radio>\\n          <Radio value=\\\"选项三\\\">选项三</Radio>\\n        </Radio.Group>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 三种大小\\n\\n```jsx\\n\\nimport { Radio } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      radioValue: ''\\n    }\\n  }\\n\\n  onChange = (e) => {\\n    console.log(e.target.value)\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div className=\\\"multi-rows\\\" style={{'marginBottom':'15px'}}>\\n          <Radio.Group size=\\\"lg\\\" type=\\\"button\\\" onChange={this.onChange}>\\n            <Radio value=\\\"选项一\\\">选项一</Radio>\\n            <Radio value=\\\"选项二\\\">选项二</Radio>\\n            <Radio value=\\\"选项三\\\">选项三</Radio>\\n          </Radio.Group>\\n        </div>\\n        <div className=\\\"multi-rows\\\" style={{'marginBottom':'15px'}}>\\n          <Radio.Group size=\\\"md\\\" >\\n            <Radio value=\\\"选项一\\\">选项一</Radio>\\n            <Radio value=\\\"选项二\\\">选项二</Radio>\\n            <Radio value=\\\"选项三\\\">选项三</Radio>\\n          </Radio.Group>\\n        </div>\\n        <div className=\\\"multi-rows\\\" style={{'marginBottom':'15px'}}>\\n          <Radio.Group size=\\\"sm\\\">\\n            <Radio value=\\\"选项一\\\">选项一</Radio>\\n            <Radio value=\\\"选项二\\\">选项二</Radio>\\n            <Radio value=\\\"选项三\\\">选项三</Radio>\\n          </Radio.Group>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| value | number，string | - | 值 |\\n| checked | boolean | false | 选中值 |\\n| disabled | boolean | false | 是否禁用|\\n| onChange | (checked: boolean) => void | - | 值变化时触发的回调函数 |\\n| id | string | - | 方便外部带有for属性的label标签控制当前radio |\\n| style | boolean | React.CSSProperties | 自定义样式 |\\n| className | string | - | 追加类名 |\\n| defaultChecked | boolean | false | 初始选中值|\\n\\n# Radio.Group\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| value | number ， string | - | 选中值 |\\n| size | `lg`、`md`、`sm` | 'md' | 大小，只对按钮类型生效  |\\n| block | boolean | false | 是否为块级元素，type为button类型时有效 |\\n| disabled | boolean | false | 是否禁用|\\n| onChange | (checked: boolean) => void | - | 值变化时触发的回调函数 |\\n| style | boolean | React.CSSProperties | 自定义样式 |\\n| className | string | - | 追加类名 |\\n| defaultValue | number ， string | - | 初始选中值|\\n| type | 'button', 'normal' | 'button' | 显示类型|\\n| ghost | boolean | false | 按钮类型是否为幽灵按钮|\\n| shape | 'radius' , 'rect' , 'round' | radius | 形状。 type为button类型时有效|\\n\""],"sourceRoot":""}