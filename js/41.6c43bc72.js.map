{"version":3,"sources":["webpack:///./components/tabs/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/41.6c43bc72.js","sourcesContent":["export default \"# Tabs 标签页\\n选项卡切换组件。\\n\\n## line\\n\\n```jsx\\nimport { Tabs, Button } from 'zarm-web';\\nconst { Tab } = Tabs;\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      size: 'md',\\n      animate: true,\\n      fields: [{\\n        closable: false,\\n        title: \\\"Tab1\\\",\\n        key: \\\"1\\\"\\n      }, {\\n        closable: false,\\n        disabled: true,\\n        title: \\\"Tab2\\\",\\n        key: \\\"2\\\",\\n      }, {\\n        closable: false,\\n        title: \\\"Tab3\\\",\\n        key: \\\"3\\\",\\n      }, {\\n        closable: true,\\n        title: \\\"Tab4\\\",\\n        key: \\\"4\\\"\\n      }, {\\n        closable: false,\\n        title: \\\"Tab5\\\",\\n        key: \\\"5\\\",\\n      }]\\n    };\\n  }\\n  onTabClose = (targetIndex) => {\\n    const { fields } = this.state;\\n    this.setState({\\n      fields: fields.filter((item, index) => targetIndex !== index),\\n    });\\n  }\\n  handleSize = (size) => {\\n    this.setState({size});\\n  }\\n  render() {\\n    return (\\n      <>\\n        <div className=\\\"rows\\\">\\n          <Button.Group>\\n            <Button onClick={() => this.handleSize('sm')}>sm</Button>\\n            <Button onClick={() => this.handleSize('md')}>md</Button>\\n            <Button onClick={() => this.handleSize('lg')}>lg</Button>\\n          </Button.Group>\\n          <Button.Group style={{marginLeft: 20}}>\\n            <Button onClick={() => this.setState({animate: false})}>no animate</Button>\\n          </Button.Group>\\n        </div>\\n        <Tabs type=\\\"line\\\" onChange={(i) => console.log(i)} value={2} onTabClose={this.onTabClose} size={this.state.size} animated={this.state.animate}>\\n          {\\n              this.state.fields.map((item, index) => (\\n                <Tab key={item.key} title={item.title} style={{padding: 10}} disabled={item.disabled} closable={item.closable}>\\n                  这是选项卡{item.key}的文字\\n                </Tab>\\n              ))\\n            }\\n        </Tabs>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## card\\n\\n```jsx\\nimport { Tabs, Icon, Button } from 'zarm-web';\\nconst { Tab } = Tabs;\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      size: 'md',\\n    }\\n  }\\n  handleSize = (size) => {\\n    this.setState({size});\\n  }\\n  render() {\\n    return (\\n      <>\\n        <div className=\\\"rows\\\">\\n          <Button.Group>\\n            <Button onClick={() => this.handleSize('sm')}>sm</Button>\\n            <Button onClick={() => this.handleSize('md')}>md</Button>\\n            <Button onClick={() => this.handleSize('lg')}>lg</Button>\\n          </Button.Group>\\n        </div>\\n        <Tabs type=\\\"card\\\" onChange={(i) => console.log(i)} size={this.state.size}>\\n          <Tab title={<><Icon type=\\\"required\\\" />Tab1</>}>\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡1的文字</p>\\n              <p>这是选项卡1的文字</p>\\n              <p>这是选项卡1的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab disabled title=\\\"Tab2\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡2的文字</p>\\n              <p>这是选项卡2的文字</p>\\n              <p>这是选项卡2的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab title=\\\"Tab3\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡3的文字</p>\\n              <p>这是选项卡3的文字</p>\\n              <p>这是选项卡3的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab title=\\\"Tab4\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡4的文字</p>\\n              <p>这是选项卡4的文字</p>\\n              <p>这是选项卡4的文字</p>\\n            </div>\\n          </Tab>\\n        </Tabs>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## noborder-card\\n\\n```jsx\\nimport { Tabs, Button } from 'zarm-web';\\nconst { Tab } = Tabs;\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      size: 'md',\\n    }\\n  }\\n  handleSize = (size) => {\\n    this.setState({size});\\n  }\\n  render() {\\n    return (\\n      <>\\n        <div className=\\\"rows\\\">\\n          <Button.Group>\\n            <Button onClick={() => this.handleSize('sm')}>sm</Button>\\n            <Button onClick={() => this.handleSize('md')}>md</Button>\\n            <Button onClick={() => this.handleSize('lg')}>lg</Button>\\n          </Button.Group>\\n        </div>\\n        <div className=\\\"box\\\" style={{background: '#F2F2F2', padding: '32px'}}>\\n          <Tabs type=\\\"noborder-card\\\" direction=\\\"horizontal\\\" defaultValue={0} onChange={(i) => console.log(i)} size={this.state.size}>\\n            <Tab title={<>Tab1</>}>\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡1的文字</p>\\n              <p>这是选项卡1的文字</p>\\n              <p>这是选项卡1的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab disabled title=\\\"Tab2\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡2的文字</p>\\n              <p>这是选项卡2的文字</p>\\n              <p>这是选项卡2的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab title=\\\"Tab3\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡3的文字</p>\\n              <p>这是选项卡3的文字</p>\\n              <p>这是选项卡3的文字</p>\\n            </div>\\n          </Tab>\\n          <Tab title=\\\"Tab4\\\">\\n            <div style={{padding: 10}}>\\n              <p>这是选项卡4的文字</p>\\n              <p>这是选项卡4的文字</p>\\n              <p>这是选项卡4的文字</p>\\n            </div>\\n          </Tab>\\n          </Tabs>\\n        </div>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## line scroll\\n\\n```jsx\\nimport { Tabs, Button } from 'zarm-web';\\nconst { Tab } = Tabs;\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      size: 'md',\\n    }\\n  }\\n\\n  handleSize = (size) => {\\n    this.setState({size});\\n  }\\n\\n  onTabClose = (current) => {\\n    const { fields } = this.state;\\n    this.setState({\\n      fields: fields.filter((item, index) => current !== index),\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <div className=\\\"rows\\\">\\n          <Button.Group>\\n            <Button onClick={() => this.handleSize('sm')}>sm</Button>\\n            <Button onClick={() => this.handleSize('md')}>md</Button>\\n            <Button onClick={() => this.handleSize('lg')}>lg</Button>\\n          </Button.Group>\\n        </div>\\n        <div>\\n          <Tabs type=\\\"line\\\" closable direction=\\\"horizontal\\\" defaultValue={0} onChange={(i) => console.log(i)} onTabClose={this.onTabClose} size={this.state.size}>\\n            {\\n              [...Array(40).keys()].map((item, index) => (\\n                <Tab key={index} title={`Tab${index + 1}`} style={{padding: 10}}>\\n                  这是选项卡{index + 1}的文字\\n                </Tab>\\n              ))\\n            }\\n          </Tabs>\\n        </div>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## card scroll\\n\\n```jsx\\nimport { Tabs, Button } from 'zarm-web';\\nconst { Tab } = Tabs;\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      size: 'md',\\n    }\\n  }\\n\\n  handleSize = (size) => {\\n    this.setState({size});\\n  }\\n\\n  onTabClose = (targetIndex) => {\\n    const { fields } = this.state;\\n    this.setState({\\n      fields: fields.filter((item, index) => targetIndex !== index),\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <div>\\n          <Tabs type=\\\"line\\\" closable direction=\\\"vertical\\\" size={this.state.size} defaultValue={0} onChange={(i) => console.log(i)} onTabClose={this.onTabClose} style={{height: '192px'}}>\\n            {\\n              [...Array(40).keys()].map((item, index) => (\\n                <Tab key={index} title={`Tab${index + 1}`}>\\n                  这是选项卡{index + 1}的文字\\n                </Tab>\\n              ))\\n            }\\n          </Tabs>\\n        </div>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## API\\n\\nTabs\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| value | number | 0 | 当前选中的tab索引值 |\\n| defaultValue | number | 0 | 默认选中的tab索引值 |\\n| type | string | 'line' | tab的类型，包含线型 卡片型 无边框卡片型，可选值为 `line` 、 `card` 、 `noborder-card`  |\\n| size | string | 'md' | 大小 可选值为`sm` 、 `md` 、 `lg`  |\\n| onChange | (index?: number) => void | - | 面板切换时触发的回调函数，参数为当前选中的tab索引值 |\\n| onTabClose | (index?: number) => void | - | 处理Tab关闭函数 |\\n| style | CSSProperties | - | 自定义容器样式 |\\n| className | string | - | 添加自定义容器类名 |\\n| prefixCls | string | 'zw-tabs' | 类名的前缀 |\\n| animated | boolean | true | 是否使用切换动画，在direction为horizontal时生效 |\\n\\nTabs.Tab\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| title | string | - | 自定义tab名称 |\\n| disabled | boolean | false | 禁用 |\\n| closable | boolean | false | 是否关闭 |\\n\\n\\n\""],"sourceRoot":""}